DROP PROCEDURE IF EXISTS ResetVouchersTables;
CREATE PROCEDURE ResetVouchersTables(IN fromdate DATETIME, IN todate DATETIME, IN BooksBegin DATETIME, IN ResetOP BOOLEAN)
BEGIN	  
    DECLARE exit handler for sqlexception
    BEGIN
    -- ERROR
     GET DIAGNOSTICS CONDITION 1
      @p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
      SELECT @p1 as RETURNED_SQLSTATE  , @p2 as MESSAGE_TEXT;
      ROLLBACK;
    END;

	START TRANSACTION;
	
	DROP TABLE IF EXISTS TMPLB;	
	CREATE TABLE IF NOT EXISTS TMPLB (BALANCE_DATE DATETIME, PROJECT_ID INT(10), LEDGER_ID INT(10), AMOUNT DECIMAL(15,2), TRANS_MODE VARCHAR(2), TRANS_FLAG VARCHAR(2),BRANCH_ID INT(10) )
	AS (SELECT BooksBegin - INTERVAL 1 DAY AS BALANCE_DATE, LBOP.PROJECT_ID, LBOP.LEDGER_ID, LBOP.AMOUNT, LBOP.TRANS_MODE, 'OP' AS TRANS_FLAG, LBOP.BRANCH_ID
    FROM LEDGER_BALANCE AS LBOP
    INNER JOIN (SELECT T.PROJECT_ID, T.LEDGER_ID, T.BRANCH_ID, MAX(T.BALANCE_DATE) AS MAXDATE FROM LEDGER_BALANCE AS T GROUP BY T.PROJECT_ID, T.LEDGER_ID, T.BRANCH_ID) AS LB ON LB.MAXDATE = LBOP.BALANCE_DATE AND LB.PROJECT_ID = LBOP.PROJECT_ID AND LB.LEDGER_ID = LBOP.LEDGER_ID AND LB.BRANCH_ID = LBOP.BRANCH_ID);

-- ## Clear all voucher tables
    -- 1. FD Tables
	DELETE FROM FD_RENEWAL;
    DELETE FROM FD_ACCOUNT;
    
    -- 2. TDS Tables
    DELETE FROM TDS_PAYMENT;
    DELETE FROM TDS_PAYMENT_DETAIL;
    DELETE FROM TDS_PARTY_PAYMENT;
    DELETE FROM TDS_PARTY_PAYMENT_DETAIL;
    DELETE FROM TDS_DEDUCTION;
    DELETE FROM TDS_DEDUCTION_DETAIL;
    DELETE FROM TDS_BOOKING;
    DELETE FROM TDS_BOOKING_DETAIL;

    -- 3. Payroll Tables
    DELETE FROM PAYROLL_VOUCHER;

    -- 4. Voucher Finance Tables
    DELETE FROM VOUCHER_CC_TRANS;
    DELETE FROM VOUCHER_TRANS;
    DELETE FROM VOUCHER_MASTER_TRANS;

-- ## Ledger Balance
    -- DELETE FROM LEDGER_BALANCE WHERE TRANS_FLAG <> 'OP';
	DELETE FROM LEDGER_BALANCE;

-- ## Voucher Number Format
    DELETE FROM VOUCHER_NUMBER_FORMAT;

-- ## AC Year
    DELETE FROM ACCOUNTING_YEAR;

-- ##  Rest Auto Number
    ALTER TABLE FD_ACCOUNT AUTO_INCREMENT = 1;
    ALTER TABLE VOUCHER_MASTER_TRANS AUTO_INCREMENT = 1;
    ALTER TABLE TDS_PAYMENT AUTO_INCREMENT = 1;
    ALTER TABLE TDS_PAYMENT_DETAIL AUTO_INCREMENT = 1;
    ALTER TABLE TDS_PARTY_PAYMENT AUTO_INCREMENT = 1;
    ALTER TABLE TDS_PARTY_PAYMENT_DETAIL AUTO_INCREMENT = 1;
    ALTER TABLE TDS_DEDUCTION AUTO_INCREMENT = 1;
    ALTER TABLE TDS_DEDUCTION_DETAIL AUTO_INCREMENT = 1;
    ALTER TABLE TDS_BOOKING AUTO_INCREMENT = 1;
    ALTER TABLE TDS_BOOKING_DETAIL AUTO_INCREMENT = 1;
    ALTER TABLE VOUCHER_NUMBER_FORMAT AUTO_INCREMENT = 1;
    ALTER TABLE ACCOUNTING_YEAR AUTO_INCREMENT = 1;

	INSERT INTO ACCOUNTING_YEAR (YEAR_FROM, YEAR_TO, BOOKS_BEGINNING_FROM, IS_FIRST_ACCOUNTING_YEAR, STATUS) VALUES(fromdate, todate, BooksBegin, 1, 1);

    IF (ResetOP=false)
    THEN
       BEGIN
	     INSERT INTO LEDGER_BALANCE SELECT BALANCE_DATE, PROJECT_ID, LEDGER_ID, AMOUNT, TRANS_MODE, TRANS_FLAG, BRANCH_ID FROM TMPLB;
       END;
    END IF;
	
	DROP TABLE IF EXISTS TMPLB;
	
	COMMIT;
    SELECT ('Successfully reset') AS MSG;
END