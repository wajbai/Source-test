//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ACPP.DataSyncService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
    [System.SerializableAttribute()]
    public partial class AcMeServiceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataSyncService.IDataSynchronizer")]
    public interface IDataSynchronizer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/IsBranchExists", ReplyAction="http://tempuri.org/IDataSynchronizer/IsBranchExistsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/IsBranchExistsAcMeServiceExceptionFault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        bool IsBranchExists(string headOfficeCode, string branchOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetHeadOfficeMailAddress", ReplyAction="http://tempuri.org/IDataSynchronizer/GetHeadOfficeMailAddressResponse")]
        string GetHeadOfficeMailAddress(string headOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetBranchMailAddress", ReplyAction="http://tempuri.org/IDataSynchronizer/GetBranchMailAddressResponse")]
        string GetBranchMailAddress(string branchOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetBranchDetails", ReplyAction="http://tempuri.org/IDataSynchronizer/GetBranchDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetBranchDetailsAcMeServiceExceptionFault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        System.Data.DataTable GetBranchDetails(string headOfficeCode, string branchOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetBranchDetailsByCredentials", ReplyAction="http://tempuri.org/IDataSynchronizer/GetBranchDetailsByCredentialsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetBranchDetailsByCredentialsAcMeServiceExce" +
            "ptionFault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        System.Data.DataTable GetBranchDetailsByCredentials(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetVoucherAmendments", ReplyAction="http://tempuri.org/IDataSynchronizer/GetVoucherAmendmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetVoucherAmendmentsAcMeServiceExceptionFaul" +
            "t", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        System.Data.DataTable GetVoucherAmendments(string headOfficeCode, string branchOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetLicenseDetails", ReplyAction="http://tempuri.org/IDataSynchronizer/GetLicenseDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetLicenseDetailsAcMeServiceExceptionFault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        System.Data.DataTable GetLicenseDetails(string headOfficeCode, string branchOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetMasterDetails", ReplyAction="http://tempuri.org/IDataSynchronizer/GetMasterDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetMasterDetailsAcMeServiceExceptionFault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        System.Data.DataSet GetMasterDetails(string headOfficeCode, string branchOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetTDSMasterDetails", ReplyAction="http://tempuri.org/IDataSynchronizer/GetTDSMasterDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetTDSMasterDetailsAcMeServiceExceptionFault" +
            "", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        System.Data.DataSet GetTDSMasterDetails(string headOfficeCode, string branchOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetMismatchedProjects", ReplyAction="http://tempuri.org/IDataSynchronizer/GetMismatchedProjectsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetMismatchedProjectsAcMeServiceExceptionFau" +
            "lt", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        System.Data.DataTable GetMismatchedProjects(string headOfficeCode, string branchOfficeCode, System.Data.DataTable dtBOProjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetMismatchedLedgers", ReplyAction="http://tempuri.org/IDataSynchronizer/GetMismatchedLedgersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetMismatchedLedgersAcMeServiceExceptionFaul" +
            "t", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        System.Data.DataTable GetMismatchedLedgers(string headOfficeCode, string branchOfficeCode, System.Data.DataTable dtBOLedgers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetExportDatatoPortalExists", ReplyAction="http://tempuri.org/IDataSynchronizer/GetExportDatatoPortalExistsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetExportDatatoPortalExistsAcMeServiceExcept" +
            "ionFault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        bool GetExportDatatoPortalExists(string headOfficeCode, string branchOfficeCode, System.DateTime dtFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/UploadVoucher", ReplyAction="http://tempuri.org/IDataSynchronizer/UploadVoucherResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/UploadVoucherAcMeServiceExceptionFault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        bool UploadVoucher(byte[] Vouchers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/UpdateDsyncStatus", ReplyAction="http://tempuri.org/IDataSynchronizer/UpdateDsyncStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/UpdateDsyncStatusAcMeServiceExceptionFault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        bool UpdateDsyncStatus(string headOfficeCode, string branchOfficeCode, string FileName, string Project, string Location, string UploadedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetHeadOfficeMessages", ReplyAction="http://tempuri.org/IDataSynchronizer/GetHeadOfficeMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetHeadOfficeMessagesAcMeServiceExceptionFau" +
            "lt", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        System.Data.DataSet GetHeadOfficeMessages(string headOfficeCode, string branchOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/PostTicket", ReplyAction="http://tempuri.org/IDataSynchronizer/PostTicketResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/PostTicketAcMeServiceExceptionFault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        bool PostTicket(string headOfficeCode, string branchOfficeCode, System.Data.DataTable dtTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/IsLatestLicenseAvailable", ReplyAction="http://tempuri.org/IDataSynchronizer/IsLatestLicenseAvailableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/IsLatestLicenseAvailableAcMeServiceException" +
            "Fault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        bool IsLatestLicenseAvailable(string headOfficeCode, string branchOfficeCode, System.DateTime dtCurrentLicenseDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetAcmeERPProductVersion", ReplyAction="http://tempuri.org/IDataSynchronizer/GetAcmeERPProductVersionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetAcmeERPProductVersionAcMeServiceException" +
            "Fault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        string GetAcmeERPProductVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetCurrentServerDate", ReplyAction="http://tempuri.org/IDataSynchronizer/GetCurrentServerDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetCurrentServerDateAcMeServiceExceptionFaul" +
            "t", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        string GetCurrentServerDate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetLockVoucher", ReplyAction="http://tempuri.org/IDataSynchronizer/GetLockVoucherResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetLockVoucherAcMeServiceExceptionFault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        System.Data.DataTable GetLockVoucher(string HeadOfficeCode, string BranchOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetLockVoucherGraceDays", ReplyAction="http://tempuri.org/IDataSynchronizer/GetLockVoucherGraceDaysResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetLockVoucherGraceDaysAcMeServiceExceptionF" +
            "ault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        System.Data.DataTable GetLockVoucherGraceDays(string HeadOfficeCode, string BranchOfficeCode, string BranchOfficeLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetApprovedBudgetsDetails", ReplyAction="http://tempuri.org/IDataSynchronizer/GetApprovedBudgetsDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetApprovedBudgetsDetailsAcMeServiceExceptio" +
            "nFault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        System.Data.DataSet GetApprovedBudgetsDetails(string headOfficeCode, string branchOfficeCode, System.DateTime dFrom, System.DateTime dTo, int budgettypeId, System.Data.DataTable dtBudgetBOProjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/UploadBudgetsDetails", ReplyAction="http://tempuri.org/IDataSynchronizer/UploadBudgetsDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/UploadBudgetsDetailsAcMeServiceExceptionFaul" +
            "t", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        bool UploadBudgetsDetails(string headOfficeCode, string branchOfficeCode, System.Data.DataSet dsBudgetDetails, bool sendMail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/UpdateBranchLoggedHistory", ReplyAction="http://tempuri.org/IDataSynchronizer/UpdateBranchLoggedHistoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/UpdateBranchLoggedHistoryAcMeServiceExceptio" +
            "nFault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        bool UpdateBranchLoggedHistory(string BranchOfficeCode, string HeadOfficeCode, string BranchOfficeName, string HeadOfficeName, string Location, System.DateTime LoggedDateTime, string LicenseKeyNumber, string Remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/UpdateSubLedgerVouchers", ReplyAction="http://tempuri.org/IDataSynchronizer/UpdateSubLedgerVouchersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/UpdateSubLedgerVouchersAcMeServiceExceptionF" +
            "ault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        string UpdateSubLedgerVouchers(string BranchOfficeCode, string HeadOfficeCode, string Location, System.DateTime FrmDate, System.DateTime ToDate, System.Data.DataTable dtSubLedgerVouchers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/UpdateProjectClosedDate", ReplyAction="http://tempuri.org/IDataSynchronizer/UpdateProjectClosedDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/UpdateProjectClosedDateAcMeServiceExceptionF" +
            "ault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        bool UpdateProjectClosedDate(string branchOfficeCode, string headOfficeCode, string location, string projectname, string projectcloseddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/RequestLocalCommunityKey", ReplyAction="http://tempuri.org/IDataSynchronizer/RequestLocalCommunityKeyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/RequestLocalCommunityKeyAcMeServiceException" +
            "Fault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        System.Data.DataTable RequestLocalCommunityKey(string licensekey, string hocode, string bocode, string location, string clientip, string clientmacaddress, string localcommunityuser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/GetLocalCommunityReceiptModuleRightStatus", ReplyAction="http://tempuri.org/IDataSynchronizer/GetLocalCommunityReceiptModuleRightStatusRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/GetLocalCommunityReceiptModuleRightStatusAcM" +
            "eServiceExceptionFault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        string GetLocalCommunityReceiptModuleRightStatus(string licensekey, string hocode, string bocode, string location, string clientip, string clientmacaddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataSynchronizer/CheckVouchersInOtherProjectsOrDates", ReplyAction="http://tempuri.org/IDataSynchronizer/CheckVouchersInOtherProjectsOrDatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ACPP.DataSyncService.AcMeServiceException), Action="http://tempuri.org/IDataSynchronizer/CheckVouchersInOtherProjectsOrDatesAcMeServi" +
            "ceExceptionFault", Name="AcMeServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcMeERP.DataSyncService")]
        System.Data.DataTable CheckVouchersInOtherProjectsOrDates(string headOfficeCode, string branchOfficeCode, string locationname, System.DateTime dFrom, System.DateTime dTo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataSynchronizerChannel : ACPP.DataSyncService.IDataSynchronizer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataSynchronizerClient : System.ServiceModel.ClientBase<ACPP.DataSyncService.IDataSynchronizer>, ACPP.DataSyncService.IDataSynchronizer {
        
        public DataSynchronizerClient() {
        }
        
        public DataSynchronizerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataSynchronizerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataSynchronizerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataSynchronizerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsBranchExists(string headOfficeCode, string branchOfficeCode) {
            return base.Channel.IsBranchExists(headOfficeCode, branchOfficeCode);
        }
        
        public string GetHeadOfficeMailAddress(string headOfficeCode) {
            return base.Channel.GetHeadOfficeMailAddress(headOfficeCode);
        }
        
        public string GetBranchMailAddress(string branchOfficeCode) {
            return base.Channel.GetBranchMailAddress(branchOfficeCode);
        }
        
        public System.Data.DataTable GetBranchDetails(string headOfficeCode, string branchOfficeCode) {
            return base.Channel.GetBranchDetails(headOfficeCode, branchOfficeCode);
        }
        
        public System.Data.DataTable GetBranchDetailsByCredentials(string userName, string password) {
            return base.Channel.GetBranchDetailsByCredentials(userName, password);
        }
        
        public System.Data.DataTable GetVoucherAmendments(string headOfficeCode, string branchOfficeCode) {
            return base.Channel.GetVoucherAmendments(headOfficeCode, branchOfficeCode);
        }
        
        public System.Data.DataTable GetLicenseDetails(string headOfficeCode, string branchOfficeCode) {
            return base.Channel.GetLicenseDetails(headOfficeCode, branchOfficeCode);
        }
        
        public System.Data.DataSet GetMasterDetails(string headOfficeCode, string branchOfficeCode) {
            return base.Channel.GetMasterDetails(headOfficeCode, branchOfficeCode);
        }
        
        public System.Data.DataSet GetTDSMasterDetails(string headOfficeCode, string branchOfficeCode) {
            return base.Channel.GetTDSMasterDetails(headOfficeCode, branchOfficeCode);
        }
        
        public System.Data.DataTable GetMismatchedProjects(string headOfficeCode, string branchOfficeCode, System.Data.DataTable dtBOProjects) {
            return base.Channel.GetMismatchedProjects(headOfficeCode, branchOfficeCode, dtBOProjects);
        }
        
        public System.Data.DataTable GetMismatchedLedgers(string headOfficeCode, string branchOfficeCode, System.Data.DataTable dtBOLedgers) {
            return base.Channel.GetMismatchedLedgers(headOfficeCode, branchOfficeCode, dtBOLedgers);
        }
        
        public bool GetExportDatatoPortalExists(string headOfficeCode, string branchOfficeCode, System.DateTime dtFrom) {
            return base.Channel.GetExportDatatoPortalExists(headOfficeCode, branchOfficeCode, dtFrom);
        }
        
        public bool UploadVoucher(byte[] Vouchers) {
            return base.Channel.UploadVoucher(Vouchers);
        }
        
        public bool UpdateDsyncStatus(string headOfficeCode, string branchOfficeCode, string FileName, string Project, string Location, string UploadedBy) {
            return base.Channel.UpdateDsyncStatus(headOfficeCode, branchOfficeCode, FileName, Project, Location, UploadedBy);
        }
        
        public System.Data.DataSet GetHeadOfficeMessages(string headOfficeCode, string branchOfficeCode) {
            return base.Channel.GetHeadOfficeMessages(headOfficeCode, branchOfficeCode);
        }
        
        public bool PostTicket(string headOfficeCode, string branchOfficeCode, System.Data.DataTable dtTicket) {
            return base.Channel.PostTicket(headOfficeCode, branchOfficeCode, dtTicket);
        }
        
        public bool IsLatestLicenseAvailable(string headOfficeCode, string branchOfficeCode, System.DateTime dtCurrentLicenseDate) {
            return base.Channel.IsLatestLicenseAvailable(headOfficeCode, branchOfficeCode, dtCurrentLicenseDate);
        }
        
        public string GetAcmeERPProductVersion() {
            return base.Channel.GetAcmeERPProductVersion();
        }
        
        public string GetCurrentServerDate() {
            return base.Channel.GetCurrentServerDate();
        }
        
        public System.Data.DataTable GetLockVoucher(string HeadOfficeCode, string BranchOfficeCode) {
            return base.Channel.GetLockVoucher(HeadOfficeCode, BranchOfficeCode);
        }
        
        public System.Data.DataTable GetLockVoucherGraceDays(string HeadOfficeCode, string BranchOfficeCode, string BranchOfficeLocation) {
            return base.Channel.GetLockVoucherGraceDays(HeadOfficeCode, BranchOfficeCode, BranchOfficeLocation);
        }
        
        public System.Data.DataSet GetApprovedBudgetsDetails(string headOfficeCode, string branchOfficeCode, System.DateTime dFrom, System.DateTime dTo, int budgettypeId, System.Data.DataTable dtBudgetBOProjects) {
            return base.Channel.GetApprovedBudgetsDetails(headOfficeCode, branchOfficeCode, dFrom, dTo, budgettypeId, dtBudgetBOProjects);
        }
        
        public bool UploadBudgetsDetails(string headOfficeCode, string branchOfficeCode, System.Data.DataSet dsBudgetDetails, bool sendMail) {
            return base.Channel.UploadBudgetsDetails(headOfficeCode, branchOfficeCode, dsBudgetDetails, sendMail);
        }
        
        public bool UpdateBranchLoggedHistory(string BranchOfficeCode, string HeadOfficeCode, string BranchOfficeName, string HeadOfficeName, string Location, System.DateTime LoggedDateTime, string LicenseKeyNumber, string Remarks) {
            return base.Channel.UpdateBranchLoggedHistory(BranchOfficeCode, HeadOfficeCode, BranchOfficeName, HeadOfficeName, Location, LoggedDateTime, LicenseKeyNumber, Remarks);
        }
        
        public string UpdateSubLedgerVouchers(string BranchOfficeCode, string HeadOfficeCode, string Location, System.DateTime FrmDate, System.DateTime ToDate, System.Data.DataTable dtSubLedgerVouchers) {
            return base.Channel.UpdateSubLedgerVouchers(BranchOfficeCode, HeadOfficeCode, Location, FrmDate, ToDate, dtSubLedgerVouchers);
        }
        
        public bool UpdateProjectClosedDate(string branchOfficeCode, string headOfficeCode, string location, string projectname, string projectcloseddate) {
            return base.Channel.UpdateProjectClosedDate(branchOfficeCode, headOfficeCode, location, projectname, projectcloseddate);
        }
        
        public System.Data.DataTable RequestLocalCommunityKey(string licensekey, string hocode, string bocode, string location, string clientip, string clientmacaddress, string localcommunityuser) {
            return base.Channel.RequestLocalCommunityKey(licensekey, hocode, bocode, location, clientip, clientmacaddress, localcommunityuser);
        }
        
        public string GetLocalCommunityReceiptModuleRightStatus(string licensekey, string hocode, string bocode, string location, string clientip, string clientmacaddress) {
            return base.Channel.GetLocalCommunityReceiptModuleRightStatus(licensekey, hocode, bocode, location, clientip, clientmacaddress);
        }
        
        public System.Data.DataTable CheckVouchersInOtherProjectsOrDates(string headOfficeCode, string branchOfficeCode, string locationname, System.DateTime dFrom, System.DateTime dTo) {
            return base.Channel.CheckVouchersInOtherProjectsOrDates(headOfficeCode, branchOfficeCode, locationname, dFrom, dTo);
        }
    }
}
